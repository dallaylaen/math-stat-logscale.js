(()=>{"use strict";var t={10:(t,i,e)=>{(()=>{const{Binning:i}=e(365),{Univariate:s}=e(513),r={Binning:i,Univariate:s};"undefined"!=typeof window?window.logstat=r:t.exports=r})()},365:t=>{function i(t,e,s=10){if(t===e)return t;if(t*e<0)return 0;if(e<0)return-i(-e,-t,s);if(t>e)return i(e,t,s);for(let i=1;;i*=s)if(Math.ceil(t*i)<=Math.floor(e*i))return Math.ceil(t*i)/i}t.exports={Binning:class{constructor(t={}){let i=t.base||1.001,e=t.precision||1e-9;if(!(i>1&&i<1.5))throw new Error("base must be a number between 1 and 1.5");if(i+=1e-9,i=2**(1/Math.ceil(Math.log(2)/Math.log(i))),1===i)throw new Error("base too close to 1");e=Number.parseFloat(""+e);const s=e*Math.ceil(1/(i-1));this._thresh=s,this._precision=e,this._base=i}getBase(){return this._base}getPrecision(){return this._precision}round(t){if(Number.isNaN(t+0))throw new Error("Attempt to round a non-numeric value: "+t);return t<0?-this.round(-t):t<this._thresh?Math.round(t/this._precision)*this._precision:this._thresh*this._base**Math.round(Math.log(t/this._thresh)/Math.log(this._base))}upper(t){return t<0?-this.lower(-t):(t=this.round(t))<this._thresh?t+this._precision/2:t*Math.sqrt(this._base)}lower(t){return t<0?-this.upper(-t):(t=this.round(t))<=this._thresh?t-this._precision/2:t/Math.sqrt(this._base)}shorten(t,e){return void 0===t?t:void 0===e?i(this.lower(t),this.upper(t)):i(t,e)}},shorten:i}},513:(t,i,e)=>{const{Binning:s}=e(365);class r extends s{constructor(t={}){super(t),this.storage={},this._count=0,this._cache={},this.neat=new n(this),t.bins&&this.addWeighted(t.bins)}add(...t){return this._cache={},t.forEach((t=>{const i=this.round(t);this.storage[i]||(this.storage[i]=[0,i]),this.storage[i][0]++})),this._count+=t.length,this}addWeighted(t){return this._cache={},t.forEach((t=>{const i=this.round(t[0]);this.storage[i]||(this.storage[i]=[0,i]),this.storage[i][0]+=t[1],this._count+=t[1]})),this}toJSON(){return{precision:this.getPrecision(),base:this.getBase(),bins:this.getBins()}}getBins(){return this._cache.data||(this._cache.data=Object.values(this.storage).map((t=>[t[1],t[0]])).sort(((t,i)=>t[0]-i[0]))),this._cache.data}count(){return this._count}min(){const t=this.getBins();return this.lower(t[0][0])}max(){const t=this.getBins();return this.upper(t[t.length-1][0])}integrate(t){let i=0;return Object.values(this.storage).forEach((e=>{i+=e[0]*t(e[1])})),i}E(t){return this._count?this.integrate(t)/this._count:void 0}mean(){return this._count?this.integrate((t=>t))/this._count:void 0}stdev(){if(this._count<2)return;const t=this.mean();return Math.sqrt(this.integrate((i=>(i-t)*(i-t)))/(this._count-1))}quantile(t){const i=t*this._count,e=this._cumulative();let s=0,r=e.length;for(;s+1<r;){const t=Math.floor((r+s)/2);e[t][1]>=i?r=t:s=t}const n=this.lower(e[s][0]);return n+(this.upper(e[s][0])-n)*(i-e[s][1])/(e[s][2]-e[s][1])}percentile(t){return this.quantile(t/100)}median(){return this.quantile(.5)}cdf(t){return this.rawCdf(t)/this._count}rawCdf(t){if(!this._count||t<=this.min())return 0;if(t>=this.max())return this._count;const i=this._cumulative(),e=this.round(t);let s=0,r=i.length;for(;s+1<r;){const t=Math.floor((r+s)/2);i[t][0]<=e?s=t:r=t}return e>i[s][0]?i[s][2]:i[s][1]+(i[s][2]-i[s][1])*(t-this.lower(t))/(this.upper(t)-this.lower(t))}histogram(t={}){if(!this._count)return[];const i=this.min(),e=this.max(),s=t.count||10,r=[];let n=i;const h=(e-i)/s;for(let t=0;t<s;t++)r.push([this.rawCdf(n+h),n,n+=h]);for(let t=r.length;t-- >1;)r[t][0]-=r[t-1][0];if(r[0][0]-=this.rawCdf(i),t.scale){let i=0;for(let t=0;t<r.length;t++)i<r[t][0]&&(i=r[t][0]);for(let e=0;e<r.length;e++)r[e][0]=r[e][0]*t.scale/i}return r}_cumulative(){if(!this._cache.cumulative){const t=this.getBins(),i=[];let e=0;for(let s=0;s<t.length;s++)i.push([t[s][0],e,e+=t[s][1]]);this._cache.cumulative=i}return this._cache.cumulative}}["cdf+","E+","max","mean","min","quantile+","stdev"].forEach((t=>{const i=!!t.match(/\+/);i&&(t=t.replace("+",""));const e=r.prototype[t];r.prototype[t]=i?function(i){if(0!==this._count)return void 0===this._cache[t]&&(this._cache[t]={}),void 0===this._cache[t][i]&&(this._cache[t][i]=e.apply(this,[i])),this._cache[t][i]}:function(){if(0!==this._count)return void 0===this._cache[t]&&(this._cache[t]=e.apply(this)),this._cache[t]}}));class n{constructor(t){this._main=t}min(){if(!this._main._count)return;const t=this._main.getBins();return this._main.shorten(t[0][0])}max(){if(!this._main._count)return;const t=this._main.getBins();return this._main.shorten(t[t.length-1][0])}}["E","mean","median","percentile","quantile","stdev"].forEach((t=>{n.prototype[t]=function(i){return this._main.shorten(this._main[t](i))}})),["cdf","count"].forEach((t=>{n.prototype[t]=function(i){return this._main[t](i)}})),t.exports={Univariate:r}}},i={};!function e(s){var r=i[s];if(void 0!==r)return r.exports;var n=i[s]={exports:{}};return t[s](n,n.exports,e),n.exports}(10)})();